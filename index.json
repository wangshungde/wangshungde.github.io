[{"categories":["影像辨識"],"contents":"深度學習實作YOLO:You Only Look Once 💪🏻實作   YOLOv3 搭配 MicrosoftCOCO物件偵測80分類，做為預設訓練資料集。\n  如何收集（取樣） 標註 、訓練資料及進行最後的推論，就能顯得非常重要，辨識完整的工作流程：    資料來源： https://makerpro.cc/2019/12/train-your-dataset-with-yolov3/ https://github.com/OmniXRI/OpenVINO_RealSense_HarvestBot/tree/master/my_yolo3\n 📝建立資料表   自行設計取景設備   或利用LabelImg透過現成的照片進行標記    資料來源: https://makerpro.cc/2019/12/train-your-dataset-with-yolov3/\n 🏷標註資料集  建立檔案分配資料夾 分配資料集大小，包括訓練集(train.txt)、驗證集(val.txt)、測試集(test.txt)及訓練加驗證集(trainval.txt)。   路徑在VOC2007/ImageSets/Main下，而各資料集清單檔(*.txt)即為不含附檔名的影像名稱清單  📝訓練資料集  一般要訓練YOLOv3可選擇使用原始的DarkNet方式或是使用常見的AI框架 本實作參考GitHub上qqwweee已Keras框架為基礎完成  資料集格式轉換   VOC2007格式所產生的標註檔(.xml)內容主要表示物件匡德方式為左上(xmin、ymin)即右下(xmax、ymax)座標，和YOLO格式不同，所以要依資料集清單檔(.txt)，將個別標註檔(*.xml)轉換成物件編號加上物件框中心座標及尺寸格式後再寫至另一個清單檔。  python voc_annotation.py 📝環境安裝  虛擬環境Anaconda 在Anaconda下安裝需要的軟件   Keras Pillow(conda install pillow) YOLOv3官網預先訓練好的權重文件yolov3.weights   📝轉換權重文件  由於此次使用的是Keras框架，所以須把下載到的YOLO預訓練權重值轉成Keras格式(*.h5)，執行convert.py即可轉換完成並置於\\model_data下，其完整指令如下所示。  python convert.py -w yolov3.cfg yolov3.weights model_data/yolo_weights.h5 ","permalink":"https://wangshungde.github.io/blog/%E5%BD%B1%E5%83%8F%E8%BE%A8%E8%AD%98/","tags":["Python","Yolo","TensorFlow","OpenCV","DarkNet","Keras"],"title":"阿德的影像辨識"},{"categories":["心得"],"contents":"hellow world\n我是阿德\n一級標題 二級標題 六級標題 我是阿德，希望能成為好的前端設計師\n 我是阿德 我是阿義 努力努力   how     are you     HELLOW\n 呈現的文字\n我是阿德我喜歡寫程式hellow\nprint (\u0026#34;hellow\u0026#34;) print (\u0026#34;hellow\u0026#34;) print (\u0026#34;hellow\u0026#34;)    名稱 Are Cool     col 3 is right-aligned $1600   col 2 is centered $12   zebra stripes are neat $1      Part 3 of our look at 30 great free and open source games for Linux is hot off the press. Featuring\n- seriously addictive RTS games\n- a pixel-perfect roguelike RPG\n- a stellar space adventure\n- a tower defense/factory game hybridhttps://t.co/8eClcyPfWR pic.twitter.com/tmV4TvGUGj\n\u0026mdash; GitHub (@github) August 27, 2021  ","permalink":"https://wangshungde.github.io/blog/%E9%98%BF%E5%BE%B7%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/","tags":["good","Fred"],"title":"阿德的第一篇文章"},{"categories":["Go Language"],"contents":"Heading 1 Heading 2 Heading 3 Heading 4 Heading 5 Heading 6 Emphasis Emphasis, aka italics, with asterisks or underscores.\nStrong emphasis, aka bold, with asterisks or underscores.\nCombined emphasis with asterisks and underscores.\nStrikethrough uses two tildes. Scratch this.\nLink I\u0026rsquo;m an inline-style link\nI\u0026rsquo;m an inline-style link with title\nI\u0026rsquo;m a reference-style link\nI\u0026rsquo;m a relative reference to a repository file\nYou can use numbers for reference-style link definitions\nOr leave it empty and use the link text itself.\nURLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or http://www.example.com and sometimes example.com (but not on Github, for example).\nSome text to show that the reference links can follow later.\nParagraph Lorem ipsum dolor sit amet consectetur adipisicing elit. Quam nihil enim maxime corporis cumque totam aliquid nam sint inventore optio modi neque laborum officiis necessitatibus, facilis placeat pariatur! Voluptatem, sed harum pariatur adipisci voluptates voluptatum cumque, porro sint minima similique magni perferendis fuga! Optio vel ipsum excepturi tempore reiciendis id quidem? Vel in, doloribus debitis nesciunt fugit sequi magnam accusantium modi neque quis, vitae velit, pariatur harum autem a! Velit impedit atque maiores animi possimus asperiores natus repellendus excepturi sint architecto eligendi non, omnis nihil. Facilis, doloremque illum. Fugit optio laborum minus debitis natus illo perspiciatis corporis voluptatum rerum laboriosam.\nList  List item List item List item List item List item  Unordered List  List item List item List item List item List item  Code and Syntax Highlighting Inline code has back-ticks around it.\nvar s = \u0026#34;JavaScript syntax highlighting\u0026#34;; alert(s); s = \u0026#34;Python syntax highlighting\u0026#34; print s No language indicated, so no syntax highlighting. But let's throw in a \u0026lt;b\u0026gt;tag\u0026lt;/b\u0026gt;. Blockquote  This is a blockquote example.\n Inline HTML You can also use raw HTML in your Markdown, and it\u0026rsquo;ll mostly work pretty well.\nTables Colons can be used to align columns.\n   Tables Are Cool     col 3 is right-aligned $1600   col 2 is centered $12   zebra stripes are neat $1    There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don\u0026rsquo;t need to make the raw Markdown line up prettily. You can also use inline Markdown.\n   Markdown Less Pretty     Still renders nicely   1 2 3    Image Youtube video   ","permalink":"https://wangshungde.github.io/blog/post-13/","tags":["HTML","Python"],"title":"How To Use Checklists To Improve Your UX"},{"categories":null,"contents":"阿德 print(\u0026#34;hellow world\u0026#34;) print(\u0026#34;hellow world\u0026#34;) print(\u0026#34;hellow world\u0026#34;) print(\u0026#34;hellow world\u0026#34;) ","permalink":"https://wangshungde.github.io/blog/test2/","tags":null,"title":""}]